<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GO on kencho51</title>
    <link>https://kencho51.github.io/tags/go/</link>
    <description>Recent content in GO on kencho51</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>kencho51</copyright>
    <lastBuildDate>Thu, 23 Jul 2020 14:41:08 +0800</lastBuildDate><atom:link href="https://kencho51.github.io/tags/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to implement Travis CI to a Hugo site</title>
      <link>https://kencho51.github.io/projects/howtoimplementtravisci/</link>
      <pubDate>Thu, 23 Jul 2020 14:41:08 +0800</pubDate>
      
      <guid>https://kencho51.github.io/projects/howtoimplementtravisci/</guid>
      <description>What is Travis?  Travis is a continuous integration testing tool that integrates with GitHub. It allows you to run automated tests on your code each time a commit is made to the repository.  How?  Sign in Travis in https://travis-ci.org/ using github account. Enable Source github repo in Travis setting, eg.kencho51/gigathing Create Personal access token in github, the scopes include:  repo admin:public_key admin:repo_hook user   Copy the token generated and update the Travis Environment Variables as below:  GH_TOKEN: paste the github GITHUB_EMAIL: kencho.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://kencho51.github.io/reference/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 02:13:50 +0000</pubDate>
      
      <guid>https://kencho51.github.io/reference/goisforlovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://kencho51.github.io/reference/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://kencho51.github.io/reference/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
  </channel>
</rss>
