<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on kencho51</title>
    <link>https://kencho51.github.io/tags/docker/</link>
    <description>Recent content in docker on kencho51</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>kencho51</copyright>
    <lastBuildDate>Mon, 15 Nov 2021 13:45:42 +0800</lastBuildDate><atom:link href="https://kencho51.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to build portainer in production</title>
      <link>https://kencho51.github.io/howtobuildportainerinproduction/</link>
      <pubDate>Mon, 15 Nov 2021 13:45:42 +0800</pubDate>
      
      <guid>https://kencho51.github.io/howtobuildportainerinproduction/</guid>
      <description>GigaDB Portainer service What is portainer? Portainer is an open-source management UI for Docker, including Docker Swarm environment. Portainer makes it easier for you to manage your Docker containers, it allows you to manage containers, images, networks, and volumes from the web-based Portainer dashboard.
Pre-requisites The staging server and live server are up and running. Here and here are the details of how to provision and configure an EC2 server using Ansible and Terraform.</description>
    </item>
    
    <item>
      <title>How to add portainer for monitoring dockers</title>
      <link>https://kencho51.github.io/howtoaddportainer/</link>
      <pubDate>Thu, 21 Oct 2021 15:56:18 +0800</pubDate>
      
      <guid>https://kencho51.github.io/howtoaddportainer/</guid>
      <description>Task Make portainer on staging and live deployment accessible with HTTPS on default port #790 Add portainer container service on staging and live deployment #791 PR #201 Steps A. Add portainer service available locally
Update docker-compose.yml portainer: image: portainer/portainer-ce:latest volumes: - /var/run/docker.sock:/var/run/docker.sock - portainer_data:/data ports: - 9009:9000 - 8008:8000 command: -H unix:///var/run/docker.sock --admin-password $PORTAINER_BCRYPT volumes: le_config: le_webrootpath: portainer_data: Create PORTAINER_PASSWORD in gitlab variables Create start_portainer.sh, if-else block to avoid keep generating PORTAINER_BCRYPT in .</description>
    </item>
    
    <item>
      <title>To resolve XDebug dependency problem</title>
      <link>https://kencho51.github.io/docker-compose-dependency/</link>
      <pubDate>Thu, 07 Jan 2021 15:04:22 +0800</pubDate>
      
      <guid>https://kencho51.github.io/docker-compose-dependency/</guid>
      <description>Problem ---&amp;gt; Running in 4c7fe5b9cf5e pecl/xdebug requires PHP (version &amp;gt;= 7.2.0, version &amp;lt;= 8.0.99), installed version is 7.1.30 No valid packages found install failed ERROR: Service &amp;#39;test&amp;#39; failed to build : The command &amp;#39;/bin/sh -c if [ ${INSTALL_XDEBUG} = true ]; then if [ $(php -r &amp;#34;echo PHP_MAJOR_VERSION;&amp;#34;) = &amp;#34;5&amp;#34; ]; then pecl install xdebug-2.5.5; else pecl install xdebug; fi &amp;amp;&amp;amp; docker-php-ext-enable xdebug ;fi&amp;#39; returned a non-zero code: 1 Effect The docker-compose run --rm test cannot be run.</description>
    </item>
    
    <item>
      <title>Commands use to run gigadb</title>
      <link>https://kencho51.github.io/commandsusetorungigadb/</link>
      <pubDate>Fri, 24 Jul 2020 16:03:12 +0800</pubDate>
      
      <guid>https://kencho51.github.io/commandsusetorungigadb/</guid>
      <description>To start a local gigaDB server docker-compose run --rm webapp
Link to test if the web page is up
If there are some build errors Rebuild and up the webapp containers again.
docker-compose run --rm webapp If not work, restart the docker container app and rebuild the containers. If not work, check if psql, gigadb, database is presented in ~/.containers/-data and remove it.
rm -rf ~/.containers-data/gigadb Run docker-compose run --rm webapp again to rebuild the containers.</description>
    </item>
    
    <item>
      <title>Learn, todo and done 22-26/6/20</title>
      <link>https://kencho51.github.io/jobs/22-6-20/</link>
      <pubDate>Mon, 22 Jun 2020 09:28:30 +0800</pubDate>
      
      <guid>https://kencho51.github.io/jobs/22-6-20/</guid>
      <description>Learn Docker TDD Codeception PHPUnit Yii2 Todo Done Issue #291 Review PR#452 Issue #423 Issue #425 Issue #440 Reference </description>
    </item>
    
    <item>
      <title>Learn, todo and done 15-19/6/20</title>
      <link>https://kencho51.github.io/jobs/15-6-20/</link>
      <pubDate>Mon, 15 Jun 2020 09:56:41 +0800</pubDate>
      
      <guid>https://kencho51.github.io/jobs/15-6-20/</guid>
      <description>Learn Docker TDD PHP standard PHPUnit Codeception Yii1.1 and Yii2 Todo Issue #423 Issue #440 Issue #425 Problem Done Created PR for issue #291 PHPUnit doc, YouTube PHP Standards: PSR-1, PSR-2 and PSR-12 Reference </description>
    </item>
    
    <item>
      <title>Docker 101</title>
      <link>https://kencho51.github.io/docker101/</link>
      <pubDate>Thu, 11 Jun 2020 17:27:08 +0800</pubDate>
      
      <guid>https://kencho51.github.io/docker101/</guid>
      <description>What is Docker? In simpler words, Docker is a tool that allows developers, sys-admins etc. to easily deploy their applications in a sandbox (called containers) to run on the host operating system i.e. Linux.
The key benefit of Docker is that it allows users to package an application with all of its dependencies into a standardized unit for software development.
Unlike virtual machines, containers do not have high overhead and hence enable more efficient usage of the underlying system and resources.</description>
    </item>
    
    <item>
      <title>Learn, todo and done 8-12/6/20</title>
      <link>https://kencho51.github.io/jobs/8-6-20/</link>
      <pubDate>Mon, 08 Jun 2020 09:25:14 +0800</pubDate>
      
      <guid>https://kencho51.github.io/jobs/8-6-20/</guid>
      <description>Learn Docker PostgreSQL OOP progress Yii1.1 framework utterances Todo Problem For Issue #291, the codes in local develop branch is huge different from that in production server, a cascade of changes will be needed. Yii1.1 blog update Home page from /site/index to /site/post in /layouts/main.php Done Fixed issue #421 Fixed issue #441 Issue #291 Reference How to add Utterances in Hugo post utterances </description>
    </item>
    
    <item>
      <title>Learn, todo and done 1-5/6/20</title>
      <link>https://kencho51.github.io/jobs/1-6-20/</link>
      <pubDate>Mon, 01 Jun 2020 09:39:04 +0800</pubDate>
      
      <guid>https://kencho51.github.io/jobs/1-6-20/</guid>
      <description>Learn Docker Yii1.1 framework PostgreSQL OOP progress Todo Use Yii 1.1 to build a blog Done Fixed issue#433. Fixed issue#436. Finished buiding yii 1.1 blog Made a pull request for issue #421 Reference For Docker: 13 Best Docker Tutorials to Learn Docker Container Docker for beginners Docker tutorial for Beginners, YouTube </description>
    </item>
    
    <item>
      <title>Learn, todo and done 10-15/20</title>
      <link>https://kencho51.github.io/jobs/10-5-20/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kencho51.github.io/jobs/10-5-20/</guid>
      <description>Learn php docker To-do Study github issues assigned by Peter Github workflow:
1. git checkout develop 2. git branch ken_issues 3. change the source code 4. test after change using docker 5. git add, commit, push 6. git message in present imperative tensehu 7. create a pull request on issue# </description>
    </item>
    
    <item>
      <title>Learn, todo and done 4-8/5/20</title>
      <link>https://kencho51.github.io/jobs/4-5-20/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kencho51.github.io/jobs/4-5-20/</guid>
      <description>Learn Start learning github, docker, php
To-do Set up account stuff Done Configuration
1.1 zsh
2. install homebrew, wget, curl 3. Github, branch, pull, merge link
4. vimtutor
5. markdown syntax Config computer, zshrc, vimrc, github, docker Fork gigadb-website </description>
    </item>
    
  </channel>
</rss>
